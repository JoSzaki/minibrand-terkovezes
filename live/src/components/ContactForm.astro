---
// ContactForm component
---

<section class="py-16 bg-gray-50">
	<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
		<div class="bg-white rounded-lg shadow-lg p-8">
			<h2 class="text-3xl font-bold text-center text-gray-900 mb-8">K�rj �raj�nlatot</h2>
			
			<form class="grid grid-cols-1 md:grid-cols-2 gap-6" id="contactFormComponent">
				<div>
					<label for="name" class="block text-sm font-medium text-gray-700 mb-2">
						Teljes n�v *
					</label>
					<input
						type="text"
						id="name"
						name="name"
						required
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						placeholder="Az �n neve"
					>
				</div>
				
				<div>
					<label for="email" class="block text-sm font-medium text-gray-700 mb-2">
						Email c�m *
					</label>
					<input
						type="email"
						id="email"
						name="email"
						required
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						placeholder="pelda@email.hu"
					>
				</div>
				
				<div>
					<label for="phone" class="block text-sm font-medium text-gray-700 mb-2">
						Telefonsz�m *
					</label>
					<input
						type="tel"
						id="phone"
						name="phone"
						required
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						placeholder="+36 20 123 4567"
					>
				</div>
				
				<div>
					<label for="service" class="block text-sm font-medium text-gray-700 mb-2">
						Szolg�ltat�s
					</label>
					<select
						id="service"
						name="service"
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
					>
						<option value="">V�lasszon szolg�ltat�st</option>
						<option value="alapozes">Alapoz�s</option>
						<option value="betonozes">Betonoz�s</option>
						<option value="terasz">Terasz betonoz�s</option>
						<option value="udvar">Udvar betonoz�s</option>
						<option value="vizallo">V�z�ll� betonoz�s</option>
						<option value="egyeb">Egy�b</option>
					</select>
				</div>
				
				<div class="md:col-span-2">
					<label for="message" class="block text-sm font-medium text-gray-700 mb-2">
						Projekt r�szletei
					</label>
					<textarea
						id="message"
						name="message"
						rows="5"
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
						placeholder="�rja le a projekt r�szleteit, ter�letnagys�got, speci�lis ig�nyeket..."
					></textarea>
				</div>
				
				<div class="md:col-span-2">
					<div class="flex items-start">
						<input
							type="checkbox"
							id="privacy"
							name="privacy"
							required
							class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mt-1"
						>
						<label for="privacy" class="ml-2 block text-sm text-gray-700">
							Elfogadom az <a href="/adatvedelmi-tajekoztato" class="text-blue-600 hover:underline">adatv�delmi t�j�koztat�t</a> �s hozz�j�rulok adataim kezel�s�hez. *
						</label>
					</div>
				</div>
				
				<div class="md:col-span-2">
					<button
						type="submit"
						class="w-full bg-blue-600 text-white py-4 px-6 rounded-lg text-lg font-semibold hover:bg-blue-700 transition-colors duration-200"
					>
						�raj�nlat K�ld�se
					</button>
				</div>
			</form>
		</div>
	</div>
</section>

<script>
// Google Sheets form submission for ContactForm component
document.getElementById('contactFormComponent')?.addEventListener('submit', async function(e) {
    e.preventDefault();

    const submitButton = this.querySelector('button[type="submit"]');
    const originalText = submitButton.textContent;

    // Disable button and show loading
    submitButton.disabled = true;
    submitButton.textContent = 'Küldés...';

    try {
        // Collect form data
        const formData = {
            name: this.querySelector('[name="name"]').value.trim(),
            email: this.querySelector('[name="email"]').value.trim(),
            phone: this.querySelector('[name="phone"]').value.trim(),
            service: this.querySelector('[name="service"]').value,
            message: this.querySelector('[name="message"]').value.trim(),
            privacy: this.querySelector('[name="privacy"]').checked,
            source: 'component-form'
        };

        // Basic validation
        if (!formData.name || !formData.phone || !formData.email || !formData.privacy) {
            throw new Error('Kérjük töltsd ki az összes kötelező mezőt és fogadd el az adatvédelmi tájékoztatót!');
        }

        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(formData.email)) {
            throw new Error('Kérjük adj meg egy érvényes email címet!');
        }

        // TODO: Replace with your actual Google Apps Script Web App URL
        const GOOGLE_SCRIPT_URL = 'YOUR_GOOGLE_APPS_SCRIPT_URL_HERE';

        // Send to Google Sheets
        const response = await fetch(GOOGLE_SCRIPT_URL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        });

        const result = await response.json();

        if (result.success) {
            // Success message
            showContactMessage('Köszönjük megkeresésed! Hamarosan felvesszük veled a kapcsolatot.', 'success');
            // Reset form
            this.reset();
        } else {
            throw new Error(result.error || 'Hiba történt az űrlap küldése során.');
        }

    } catch (error) {
        console.error('ContactForm submission error:', error);
        showContactMessage(error.message || 'Hiba történt. Kérjük próbáld újra vagy hívj minket a +36 70 578 6296 telefonszámon.', 'error');
    } finally {
        // Re-enable button
        submitButton.disabled = false;
        submitButton.textContent = originalText;
    }
});

// Show success/error messages for ContactForm
function showContactMessage(message, type) {
    // Remove existing messages
    const existingMessage = document.querySelector('.contact-form-message');
    if (existingMessage) {
        existingMessage.remove();
    }

    // Create new message
    const messageDiv = document.createElement('div');
    messageDiv.className = `contact-form-message p-4 rounded-lg mb-4 ${
        type === 'success'
            ? 'bg-green-100 border border-green-400 text-green-700'
            : 'bg-red-100 border border-red-400 text-red-700'
    }`;
    messageDiv.textContent = message;

    // Insert before form
    const form = document.getElementById('contactFormComponent');
    form.parentNode.insertBefore(messageDiv, form);

    // Auto-remove after 10 seconds
    setTimeout(() => {
        if (messageDiv.parentNode) {
            messageDiv.remove();
        }
    }, 10000);

    // Scroll to message
    messageDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
}
</script>
