"use client";

import { Carousel } from "./carousel";
import { useState } from "react";

// Modal component for detailed information
const PatternModal = ({ pattern, isOpen, onClose }: any) => {
  if (!isOpen || !pattern) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl max-w-2xl w-full max-h-90vh overflow-y-auto">
        <div className="relative">
          <button
            onClick={onClose}
            className="absolute top-4 right-4 w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors z-10"
          >
            √ó
          </button>
          <picture>
            <source srcSet={pattern.webp} type="image/webp" />
            <img
              src={pattern.src}
              alt={pattern.title}
              className="w-full h-64 object-cover rounded-t-xl"
              loading="lazy"
            />
          </picture>
          <div className="p-6">
            <h3 className="text-2xl font-bold text-gray-800 mb-4">{pattern.title}</h3>
            <div className="grid md:grid-cols-2 gap-4 mb-6">
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">√År/m¬≤:</h4>
                <p className="text-primary-600 font-bold text-lg">{pattern.details.price}</p>
              </div>
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">Tart√≥ss√°g:</h4>
                <p className="text-gray-600">{pattern.details.durability}</p>
              </div>
            </div>

            <div className="mb-6">
              <h4 className="font-semibold text-gray-700 mb-2">F≈ëbb tulajdons√°gok:</h4>
              <ul className="list-disc list-inside space-y-1">
                {pattern.details.features.map((feature: string, index: number) => (
                  <li key={index} className="text-gray-600">{feature}</li>
                ))}
              </ul>
            </div>

            <div className="grid md:grid-cols-2 gap-4 mb-6">
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">El≈ëny√∂k:</h4>
                <ul className="space-y-1">
                  {pattern.details.pros.map((pro: string, index: number) => (
                    <li key={index} className="text-green-600 text-sm">‚úì {pro}</li>
                  ))}
                </ul>
              </div>
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">H√°tr√°nyok:</h4>
                <ul className="space-y-1">
                  {pattern.details.cons.map((con: string, index: number) => (
                    <li key={index} className="text-red-600 text-sm">‚Ä¢ {con}</li>
                  ))}
                </ul>
              </div>
            </div>

            <div className="mb-6">
              <h4 className="font-semibold text-gray-700 mb-2">Aj√°nlott haszn√°lat:</h4>
              <div className="flex flex-wrap gap-2">
                {pattern.details.usage.map((use: string, index: number) => (
                  <span key={index} className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
                    {use}
                  </span>
                ))}
              </div>
            </div>

            <p className="text-gray-600 leading-relaxed">{pattern.details.fullDescription}</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export function PatternCarousel() {
  const [selectedPattern, setSelectedPattern] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const patterns = [
    {
      title: "Egyenes Sz√©l≈±",
      button: "R√©szletek",
      src: "/images/terko-fajtak/egyenes sz√©l≈± beton t√©rk≈ë.png",
      webp: "/images/terko-fajtak/egyenes sz√©l≈± beton t√©rk≈ë.webp",
      details: {
        price: '8.000-25.000 Ft/m¬≤',
        durability: '20-50 √©v',
        maintenance: 'Alacsony',
        features: ['Egyenes vonalak', 'Prec√≠z illeszked√©s', 'Modern megjelen√©s', 'V√°ltozatos m√©retek'],
        pros: ['Tiszta, letisztult design', 'K√∂nnyen tervezhet≈ë', 'Minim√°l st√≠lushoz ide√°lis', 'Gyors telep√≠t√©s'],
        cons: ['Kev√©sb√© dekorat√≠v', 'Egyhang√∫ lehet'],
        usage: ['Modern h√°zak', 'Minim√°l kertek', 'Iroda√©p√ºletek', 'Kort√°rs projektek'],
        fullDescription: 'Az egyenes sz√©l≈± t√©rk√∂vek modern, letisztult megjelen√©st biztos√≠tanak. T√∂k√©letesek kort√°rs √©p√≠t√©szeti st√≠lusokhoz.'
      }
    },
    {
      title: "Hull√°mos Szeg√©ly≈±",
      button: "R√©szletek",
      src: "/images/terko-fajtak/hull√°mos szeg√©ly≈± beton t√©rk≈ë.png",
      webp: "/images/terko-fajtak/hull√°mos szeg√©ly≈± beton t√©rk≈ë.png",
      details: {
        price: '9.000-27.000 Ft/m¬≤',
        durability: '20-45 √©v',
        maintenance: 'K√∂zepes',
        features: ['Hull√°mos vonalvezet√©s', 'Term√©szetes megjelen√©s', 'Jobb tapad√°s', 'Dekorat√≠v hat√°s'],
        pros: ['Eszt√©tikus megjelen√©s', 'Cs√∫sz√°sg√°tl√≥', 'Term√©szetes hat√°s', 'Egyedi mint√°zat'],
        cons: ['Komplexebb telep√≠t√©s', 'Magasabb √°r', 'Nehezebb tiszt√≠t√°s'],
        usage: ['Hagyom√°nyos h√°zak', 'Kerti √∂sv√©nyek', 'Dekorat√≠v ter√ºletek', 'Term√©szetk√∂zeli terek'],
        fullDescription: 'A hull√°mos szeg√©ly≈± t√©rk√∂vek term√©szetes, organikus megjelen√©st k√∂lcs√∂n√∂znek. Kiv√°l√≥ v√°laszt√°s hagyom√°nyos √©s term√©szetk√∂zeli k√∂rnyezethez.'
      }
    },
    {
      title: "H-alak√∫",
      button: "R√©szletek",
      src: "/images/terko-fajtak/h alak√∫ t√©rk≈ë.png",
      webp: "/images/terko-fajtak/h alak√∫ t√©rk≈ë.webp",
      details: {
        price: '15.000-40.000 Ft/m¬≤',
        durability: '30-60 √©v',
        maintenance: 'Minim√°lis',
        features: ['H-alak√∫ forma', 'Maxim√°lis stabilit√°s', 'Neh√©z terhel√©s', 'Ipari min≈ës√©g'],
        pros: ['Rendk√≠v√ºl stabil', 'Nagy terhelhet≈ës√©g', 'Hossz√∫ √©lettartam', 'Minim√°lis karbantart√°s'],
        cons: ['Dr√°ga beszerz√©s', 'Ipari megjelen√©s', 'Speci√°lis telep√≠t√©s'],
        usage: ['Ipari ter√ºletek', 'Teheraut√≥ parkol√≥k', 'Logisztikai k√∂zpontok', 'Nagy forgalm√∫ utak'],
        fullDescription: 'A H-alak√∫ t√©rk√∂vek a legnagyobb terhelhet≈ës√©g≈± megold√°sok. Ipari k√∂rnyezetben √©s nagy forgalm√∫ ter√ºleteken haszn√°latosak.'
      }
    },
    {
      title: "Gyeph√©zagos",
      button: "R√©szletek",
      src: "/images/terko-fajtak/gyeph√©zagos t√©rk≈ë.png",
      webp: "/images/terko-fajtak/gyeph√©zagos t√©rk≈ë.webp",
      details: {
        price: '10.000-30.000 Ft/m¬≤',
        durability: '25-40 √©v',
        maintenance: 'K√∂zepes',
        features: ['F≈± n√∂veked√©s√©re alkalmas', 'V√≠zelvezet√©s', 'K√∂rnyezetbar√°t', 'Term√©szetes megjelen√©s'],
        pros: ['Z√∂ld fel√ºlet', 'V√≠zelvezet√©s', 'K√∂rnyezetbar√°t', 'Term√©szetes h≈±t√©s'],
        cons: ['Rendszeres karbantart√°s', 'F≈± gondoz√°sa sz√ºks√©ges', 'Szezon√°lis megjelen√©s'],
        usage: ['Parkol√≥k', 'T≈±zolt√≥ utak', 'Rekre√°ci√≥s ter√ºletek', 'K√∂rnyezettudatos projektek'],
        fullDescription: 'A gyeph√©zagos t√©rk√∂vek lehet≈ëv√© teszik a n√∂v√©nyzet n√∂veked√©s√©t, √≠gy k√∂rnyezetbar√°t √©s term√©szetes megold√°st ny√∫jtanak.'
      }
    },
  ];

  const handleSlideClick = (pattern: any) => {
    setSelectedPattern(pattern);
    setIsModalOpen(true);
  };

  // Convert patterns to carousel format
  const carouselSlides = patterns.map(pattern => ({
    ...pattern,
    onClick: () => handleSlideClick(pattern)
  }));

  return (
    <section className="py-16 lg:py-24 bg-gradient-to-br from-green-50 to-green-100">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl lg:text-4xl font-bold text-concrete-800 font-heading mb-4">
            üé® T√©rk≈ë Mint√°k √©s Form√°k
          </h2>
          <p className="text-xl text-concrete-600 max-w-4xl mx-auto">
            V√°lasszon a k√ºl√∂nb√∂z≈ë form√°k √©s mint√°zatok k√∂z√ºl. Kattintson a k√©pre a nagy√≠t√°shoz, vagy a "R√©szletek" gombra a teljes inform√°ci√≥k√©rt.
          </p>
        </div>

        <div className="relative">
          <Carousel slides={carouselSlides} />
        </div>
      </div>

      <PatternModal
        pattern={selectedPattern}
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
      />
    </section>
  );
}