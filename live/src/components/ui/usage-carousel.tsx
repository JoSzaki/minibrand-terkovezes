"use client";

import { Carousel } from "./carousel";
import { useState } from "react";

// Modal component for detailed information
const UsageModal = ({ usage, isOpen, onClose }: any) => {
  if (!isOpen || !usage) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl max-w-2xl w-full max-h-90vh overflow-y-auto">
        <div className="relative">
          <button
            onClick={onClose}
            className="absolute top-4 right-4 w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors z-10"
          >
            √ó
          </button>
          <img
            src={usage.src}
            alt={usage.title}
            className="w-full h-64 object-cover rounded-t-xl"
          />
          <div className="p-6">
            <h3 className="text-2xl font-bold text-gray-800 mb-4">{usage.title}</h3>
            <div className="grid md:grid-cols-2 gap-4 mb-6">
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">√År/m¬≤:</h4>
                <p className="text-primary-600 font-bold text-lg">{usage.details.price}</p>
              </div>
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">Tart√≥ss√°g:</h4>
                <p className="text-gray-600">{usage.details.durability}</p>
              </div>
            </div>

            <div className="mb-6">
              <h4 className="font-semibold text-gray-700 mb-2">F≈ëbb tulajdons√°gok:</h4>
              <ul className="list-disc list-inside space-y-1">
                {usage.details.features.map((feature: string, index: number) => (
                  <li key={index} className="text-gray-600">{feature}</li>
                ))}
              </ul>
            </div>

            <div className="grid md:grid-cols-2 gap-4 mb-6">
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">El≈ëny√∂k:</h4>
                <ul className="space-y-1">
                  {usage.details.pros.map((pro: string, index: number) => (
                    <li key={index} className="text-green-600 text-sm">‚úì {pro}</li>
                  ))}
                </ul>
              </div>
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">H√°tr√°nyok:</h4>
                <ul className="space-y-1">
                  {usage.details.cons.map((con: string, index: number) => (
                    <li key={index} className="text-red-600 text-sm">‚Ä¢ {con}</li>
                  ))}
                </ul>
              </div>
            </div>

            <div className="mb-6">
              <h4 className="font-semibold text-gray-700 mb-2">Aj√°nlott haszn√°lat:</h4>
              <div className="flex flex-wrap gap-2">
                {usage.details.usage.map((use: string, index: number) => (
                  <span key={index} className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
                    {use}
                  </span>
                ))}
              </div>
            </div>

            <p className="text-gray-600 leading-relaxed">{usage.details.fullDescription}</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export function UsageCarousel() {
  const [selectedUsage, setSelectedUsage] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const usages = [
    {
      title: "G√©pj√°rm≈±-mentes Ter√ºletek",
      button: "R√©szletek",
      src: "https://images.unsplash.com/photo-1600607687920-4e2a09cf159d?auto=format&fit=crop&w=800&q=80",
      details: {
        price: '8.000-30.000 Ft/m¬≤',
        durability: '20-40 √©v',
        maintenance: 'Alacsony',
        features: ['40-60 mm vastags√°g', 'Egyenes oldal√∫', 'Beton/ker√°mia/term√©szetes k≈ë', 'Dekorat√≠v megjelen√©s'],
        pros: ['Kedvez≈ë √°r', 'Sz√©p megjelen√©s', 'K√∂nny≈± telep√≠t√©s', 'V√°ltozatos designok'],
        cons: ['Csak gyalogos forgalom', 'Korl√°tozott terhel√©s'],
        usage: ['Teraszok', 'Kerti j√°rd√°k', 'Medence k√∂r√ºli ter√ºletek', 'Pihen≈ëkertek'],
        fullDescription: 'G√©pj√°rm≈± forgalomnak nem kitett ter√ºletekre 40-60 mm vastag, egyenes oldal√∫ t√©rk√∂veket aj√°nlunk beton, ker√°mia vagy term√©szetes k≈ë anyagb√≥l.'
      }
    },
    {
      title: "Enyhe G√©pj√°rm≈±forgalom",
      button: "R√©szletek",
      src: "https://images.unsplash.com/photo-1600298881974-6be191ceeda1?auto=format&fit=crop&w=800&q=80",
      details: {
        price: '10.000-32.000 Ft/m¬≤',
        durability: '25-40 √©v',
        maintenance: 'Alacsony',
        features: ['60 mm vastags√°g', 'Egyenes vagy hull√°mos sz√©l', 'Beton/ker√°mia', 'Szem√©lyaut√≥ terhel√©s'],
        pros: ['Csal√°di h√°zakhoz ide√°lis', 'Megb√≠zhat√≥ terhelhet≈ës√©g', 'Szem√©lyaut√≥knak megfelel≈ë', 'Eszt√©tikus megjelen√©s'],
        cons: ['Teheraut√≥knak nem alkalmas', 'Dr√°g√°bb mint a v√©konyabb v√°ltozat'],
        usage: ['Csal√°di h√°zak parkol√≥i', 'Kisebb t√°rsash√°zak', 'Vend√©gparkol√≥k', 'Mag√°nter√ºletek'],
        fullDescription: 'Enyhe g√©pj√°rm≈±forgalomnak kitett ter√ºletekre 60 mm vastag, egyenes vagy hull√°mos oldal√∫ beton/ker√°mia t√©rk√∂veket aj√°nlunk.'
      }
    },
    {
      title: "Teheraut√≥ Forgalom",
      button: "R√©szletek",
      src: "https://images.unsplash.com/photo-1600298882974-6be191ceeda0?auto=format&fit=crop&w=800&q=80",
      details: {
        price: '18.000-50.000 Ft/m¬≤',
        durability: '40-60 √©v',
        maintenance: 'Minim√°lis',
        features: ['80 mm vastags√°g', 'H-alak√∫', 'Ipari beton t√©rk≈ë', 'Maxim√°lis terhelhet≈ës√©g'],
        pros: ['Teheraut√≥ forgalom', 'Ipari k√∂rnyezet', 'Minim√°lis karbantart√°s', 'Rendk√≠v√ºl tart√≥s'],
        cons: ['Nagy beruh√°z√°si k√∂lts√©g', 'Ipari megjelen√©s'],
        usage: ['Ipari parkol√≥k', 'Logisztikai k√∂zpontok', 'Rakt√°rudvarok', 'Teherg√©pj√°rm≈± √∫tvonalak'],
        fullDescription: 'Magas terhel√©snek kitett, rendszeres teheraut√≥ forgalmat kezel≈ë ter√ºletekre 80 mm vastag, H-alak√∫ beton t√©rk√∂veket aj√°nlunk.'
      }
    }
  ];

  const handleSlideClick = (usage: any) => {
    setSelectedUsage(usage);
    setIsModalOpen(true);
  };

  // Convert usages to carousel format
  const carouselSlides = usages.map(usage => ({
    ...usage,
    onClick: () => handleSlideClick(usage)
  }));

  return (
    <section className="py-16 lg:py-24 bg-gradient-to-br from-orange-50 to-orange-100">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl lg:text-4xl font-bold text-concrete-800 font-heading mb-4">
            üìê Felhaszn√°l√°si Ter√ºletek
          </h2>
          <p className="text-xl text-concrete-600 max-w-4xl mx-auto">
            V√°lassza ki a tervezett haszn√°lat szerinti megfelel≈ë vastags√°g√∫ t√©rk√∂veket. Kattintson a k√©pre a nagy√≠t√°shoz, vagy a "R√©szletek" gombra a teljes inform√°ci√≥k√©rt.
          </p>
        </div>

        <div className="relative">
          <Carousel slides={carouselSlides} />
        </div>
      </div>

      <UsageModal
        usage={selectedUsage}
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
      />
    </section>
  );
}