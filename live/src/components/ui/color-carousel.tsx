"use client";

import { Carousel } from "./carousel";
import { useState } from "react";

// Modal component for detailed information
const ColorModal = ({ color, isOpen, onClose }: any) => {
  if (!isOpen || !color) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl max-w-2xl w-full max-h-90vh overflow-y-auto">
        <div className="relative">
          <button
            onClick={onClose}
            className="absolute top-4 right-4 w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors z-10"
          >
            √ó
          </button>
          <picture>
            <source srcSet={color.webp} type="image/webp" />
            <img
              src={color.src}
              alt={color.title}
              className="w-full h-64 object-cover rounded-t-xl"
              loading="lazy"
            />
          </picture>
          <div className="p-6">
            <h3 className="text-2xl font-bold text-gray-800 mb-4">{color.title}</h3>
            <div className="grid md:grid-cols-2 gap-4 mb-6">
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">√År/m¬≤:</h4>
                <p className="text-primary-600 font-bold text-lg">{color.details.price}</p>
              </div>
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">Tart√≥ss√°g:</h4>
                <p className="text-gray-600">{color.details.durability}</p>
              </div>
            </div>

            <div className="mb-6">
              <h4 className="font-semibold text-gray-700 mb-2">F≈ëbb tulajdons√°gok:</h4>
              <ul className="list-disc list-inside space-y-1">
                {color.details.features.map((feature: string, index: number) => (
                  <li key={index} className="text-gray-600">{feature}</li>
                ))}
              </ul>
            </div>

            <div className="grid md:grid-cols-2 gap-4 mb-6">
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">El≈ëny√∂k:</h4>
                <ul className="space-y-1">
                  {color.details.pros.map((pro: string, index: number) => (
                    <li key={index} className="text-green-600 text-sm">‚úì {pro}</li>
                  ))}
                </ul>
              </div>
              <div>
                <h4 className="font-semibold text-gray-700 mb-2">H√°tr√°nyok:</h4>
                <ul className="space-y-1">
                  {color.details.cons.map((con: string, index: number) => (
                    <li key={index} className="text-red-600 text-sm">‚Ä¢ {con}</li>
                  ))}
                </ul>
              </div>
            </div>

            <div className="mb-6">
              <h4 className="font-semibold text-gray-700 mb-2">Aj√°nlott haszn√°lat:</h4>
              <div className="flex flex-wrap gap-2">
                {color.details.usage.map((use: string, index: number) => (
                  <span key={index} className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
                    {use}
                  </span>
                ))}
              </div>
            </div>

            <p className="text-gray-600 leading-relaxed">{color.details.fullDescription}</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export function ColorCarousel() {
  const [selectedColor, setSelectedColor] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const colors = [
    {
      title: "Sz√ºrke √Årnyalatok",
      button: "R√©szletek",
      src: "/images/terko-fajtak/beton t√©rk≈ë.webp",
      webp: "/images/terko-fajtak/beton t√©rk≈ë.webp",
      details: {
        price: '8.000-30.000 Ft/m¬≤',
        durability: '20-50 √©v',
        maintenance: 'Alacsony',
        features: ['Id≈ët√°ll√≥ sz√≠n', 'Univerz√°lis haszn√°lat', 'Nem fakul√≥', 'Minden st√≠lushoz passzenthet≈ë'],
        pros: ['Semleges, eleg√°ns', 'Mindenhez illik', 'Praktikus v√°laszt√°s', 'Kis szennyez≈ëd√©s nem l√°tszik'],
        cons: ['Egyhang√∫ lehet', 'Kev√©sb√© k√ºl√∂nleges'],
        usage: ['Minden ter√ºletre alkalmas', 'Modern √©s klasszikus st√≠lus', 'Kereskedelmi ter√ºletek'],
        fullDescription: 'A sz√ºrke t√©rk√∂vek a legsokoldal√∫bb sz√≠nv√°laszt√°s. Minden k√∂rnyezetben eleg√°ns, id≈ët√°ll√≥ megjelen√©st biztos√≠tanak.'
      }
    },
    {
      title: "Barna T√≥nusok",
      button: "R√©szletek",
      src: "/images/terko-fajtak/ker√°mia t√©rk≈ë.png",
      webp: "/images/terko-fajtak/ker√°mia t√©rk≈ë.webp",
      details: {
        price: '9.000-32.000 Ft/m¬≤',
        durability: '20-45 √©v',
        maintenance: 'Alacsony',
        features: ['Term√©szetes sz√≠nek', 'Meleg hangulat', 'Erd≈ës k√∂rnyezethez', 'Hagyom√°nyos st√≠lus'],
        pros: ['Term√©szetes megjelen√©s', 'Meleg, bar√°ts√°gos', 'Klasszikus st√≠lushoz ide√°lis', 'J√≥l rejtik a szennyez≈ëd√©st'],
        cons: ['Fakulhat id≈ëvel', 'Korl√°tozott modern haszn√°lat'],
        usage: ['Vid√©ki h√°zak', 'Term√©szetk√∂zeli terek', 'Hagyom√°nyos kertek', 'Erd≈ës k√∂rnyezet'],
        fullDescription: 'A barna t√©rk√∂vek term√©szetes, meleg hangulatot teremtenek. T√∂k√©letesek hagyom√°nyos √©s term√©szetk√∂zeli k√∂rnyezethez.'
      }
    },
    {
      title: "B√©zs √©s Kr√©m",
      button: "R√©szletek",
      src: "/images/terko-fajtak/m√°rv√°ny t√©rk≈ë.png",
      webp: "/images/terko-fajtak/m√°rv√°ny t√©rk≈ë.webp",
      details: {
        price: '10.000-35.000 Ft/m¬≤',
        durability: '25-50 √©v',
        maintenance: 'K√∂zepes',
        features: ['Mediterr√°n st√≠lus', 'Vil√°gos t√≥nusok', 'H≈±v√∂s fel√ºlet', 'Eleg√°ns megjelen√©s'],
        pros: ['Mediterr√°n hangulat', 'Vil√°gos, t√°gas √©rzet', 'Eleg√°ns megjelen√©s', 'H≈±v√∂s ny√°ron'],
        cons: ['Hamarabb piszkos', 'Gyakoribb tiszt√≠t√°s sz√ºks√©ges'],
        usage: ['Mediterr√°n st√≠lus', 'Medence k√∂rny√©k', 'Napf√©nyes teraszok', 'Luxus projektek'],
        fullDescription: 'A b√©zs √©s kr√©m t√©rk√∂vek mediterr√°n eleganci√°t k√∂lcs√∂n√∂znek. Vil√°gos t√≥nusaik t√°gas √©s h≈±v√∂s √©rzetet teremtenek.'
      }
    },
    {
      title: "Antracit √©s Fekete",
      button: "R√©szletek",
      src: "/images/terko-fajtak/gr√°nit t√©rk≈ë.webp",
      webp: "/images/terko-fajtak/gr√°nit t√©rk≈ë.webp",
      details: {
        price: '12.000-40.000 Ft/m¬≤',
        durability: '25-50 √©v',
        maintenance: 'K√∂zepes',
        features: ['S√∂t√©t elegancia', 'Modern megjelen√©s', 'Karakteres hat√°s', 'Pr√©mium √©rzet'],
        pros: ['Eleg√°ns, modern', 'Karakteres megjelen√©s', 'Pr√©mium hat√°s', 'Kort√°rs st√≠lushoz ide√°lis'],
        cons: ['Melegszik a napon', 'Por √©s karcol√°s l√°tszik'],
        usage: ['Modern h√°zak', 'Kort√°rs kertek', 'Pr√©mium projektek', 'Designos k√∂rnyezet'],
        fullDescription: 'Az antracit √©s fekete t√©rk√∂vek modern, karakteres megjelen√©st biztos√≠tanak. Pr√©mium √©rzetet keltenek minden k√∂rnyezetben.'
      }
    }
  ];

  const handleSlideClick = (color: any) => {
    setSelectedColor(color);
    setIsModalOpen(true);
  };

  // Convert colors to carousel format
  const carouselSlides = colors.map(color => ({
    ...color,
    onClick: () => handleSlideClick(color)
  }));

  return (
    <section className="py-16 lg:py-24 bg-gradient-to-br from-purple-50 to-purple-100">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl lg:text-4xl font-bold text-concrete-800 font-heading mb-4">
            üé® Sz√≠nek √©s √Årnyalatok
          </h2>
          <p className="text-xl text-concrete-600 max-w-4xl mx-auto">
            V√°lassza ki a st√≠lus√°hoz √©s k√∂rnyezethez ill≈ë sz√≠nt. Kattintson a k√©pre a nagy√≠t√°shoz, vagy a "R√©szletek" gombra a teljes inform√°ci√≥k√©rt.
          </p>
        </div>

        <div className="relative">
          <Carousel slides={carouselSlides} />
        </div>
      </div>

      <ColorModal
        color={selectedColor}
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
      />
    </section>
  );
}